01-02-2024 Cypress Installation & Introduction to Automation


Software Testing: 
	-identification of bugs and providing detailed bug-tickets for an application under development.
	
	EXPECTED === ACTUAL 		-> PASS
	EXPECTED !== ACTUAL 		-> FAILURE (Bug Ticket)

EXPECTED: Expected behavior of the application
-Customer expectation
-SRS document - Requirements -> Confluence Pages, JIRA, Backlog (Epics, User stories)
-Design: visual documentation of what is expected


ACTUAL:
-What developers actually build with the design and requirements guides


THERE ARE 2 WAYS TO CONDUCT SOFTWARE TESTING?
1. Manual
	-No need to learn programming languages - coding
2. Automation
	-Requires programming language knowledge and automation tools
	-Write a code that does exactly what Manual Tester does



10-15 years ago
10 Manual Testers - 40-50k -> 400-500k

20 - 1 hour
200-300 -> 10-15 hours -> 2 days for one manual tester


Selenium - Cypress - Playwright - WebDriverIO - TestCase - .......

2 automation testers - 1 manual 
2000 -> 1800 automation
200 Manual
160k + 50k -> 210k

Autamation is FASTER and COST-EFFECTIVE!!!

60-70k - Manual Tester 			-> 40-100
100-110k - Automation Tester 	-> 80-200


CYPRESS: Cypress is an automation tool used to execute test cases automatically. 
		 It automates web browsers.

		 Web Browser: Chrome, Safari, Edge, Firefox, Opera
		 Web Application: https://www._____________
		 Web Page: HTML (Structure) + CSS (Styles) + JavaScript (Actions)
		 Web Element: Everything you see on a web page (button, image, text input, paragraph, link, lists, tbales, forms)
		 HTML TAG: TAGs are used to create web elements

		 <tagName attribute1="value1" attribute2="value2">Visible Text</tagName>
		 <p id="main-text" class="text" style="color:blue">Hello World!<p>


npm install cypress: that command installed Cypress (libraries) to our project
Libraries: files, modules, more methods.


NPM: Node Package Manager
-It is a package manager for JavaScript programming language and the default package manager for Node.js.
-NPM serves as a repository of various JavaScript libraries, tools, frameworks, and packages that developers can easily install and use in their projects. It allows developers to access and manage both front-end and back-end JavaScript libraries, making it a versatile tool for web development.



npm init -y
	This command initializes a new Node.js project in the current directory.
	The flag -y indicates that it will use default configurations for all settings without prompting for any input.

	After running npm init -y, a package.json file is created in the specified directory.
	The generated package.json file contains basic information about the project:
		"name": Name of the project ("cypress_introduction").
		"version": Project version ("1.0.0").
		"description": Description of the project (empty in this case).
		"main": Entry point file for the project ("index.js").
		"scripts": Defines scripts that can be run via npm commands (a default "test" script that echoes an error if no test is specified).
		"keywords", "author", and "license": Additional project metadata like keywords, author, and license details.



package.json vs package-lock.json

package.json and package-lock.json are both important files in Node.js projects, but they serve different purposes:
	-package.json serves as a manifest for the Node.js project, containing metadata about the project and its dependencies.
	-It includes project details such as the project name, version, entry point, scripts, dependencies, devDependencies, author information, and license.
	-Lists the packages required for the project to run (dependencies) and those needed for development (devDependencies).
	-Developers can add, update, or remove dependencies manually or using npm/yarn commands (npm install, npm uninstall, npm update, etc.).
	-Does not lock down dependency versions, meaning it allows for flexibility and may lead to different versions being installed on different machines.

package-lock.json is automatically generated by npm after npm install and serves as a record of the exact versions of dependencies installed.
	-It contains a detailed, timestamped record of every dependency version installed, including sub-dependencies and their versions.
	-Locks down the specific versions of every installed package and its dependencies. -This ensures consistency and reproducibility across different environments or when collaborating with others.
	-It is intended to ensure deterministic and reproducible builds. It's used by npm to install the same dependency versions on different machines, maintaining consistency within the project.
	-It's automatically generated and should not be manually altered. npm manages it to ensure consistency.


OPEN CYPRESS TEST RUNNER (DASHBOARD)
npx cypress open


npm: node package manager and help us installing libraries (dependencies)
npx: node package executor and help us executing the libraries


YARN: is an alternative to NPM
yarn install dependencies

DEPENDENCY = LIBRARY

MODULES: ES6 Modules (import/export) or CommonJS (export/require)



CYPRESS TEST RUNNER:
Specs: like folders that we are going to have our automated tests.
Each Specs can have one or more tests.




ATLASSIAN has a suite of software used by so many tech and other companies.
Confluence: Documentation tool
JIRA: Project management tool
Bitbucket: Exactly same tool like GitHub

